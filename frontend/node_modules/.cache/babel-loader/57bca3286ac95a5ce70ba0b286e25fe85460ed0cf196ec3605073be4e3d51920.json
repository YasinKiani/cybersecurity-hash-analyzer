{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YASIN\\\\Desktop\\\\New folder (19)\\\\frontend\\\\src\\\\components\\\\PasswordCracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/PasswordCracker.css\";\nimport { API_BASE_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordCracker = () => {\n  _s();\n  const [hashValue, setHashValue] = useState(\"\");\n  const [algorithm, setAlgorithm] = useState(\"md5\");\n  const [method, setMethod] = useState(\"dictionary\");\n  const [crackResult, setCrackResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [passwordToHash, setPasswordToHash] = useState(\"\");\n  const [generatedHash, setGeneratedHash] = useState(\"\");\n  const algorithms = [\"md5\", \"sha1\", \"sha256\", \"sha512\"];\n  const methods = [{\n    value: \"dictionary\",\n    label: \"Dictionary Attack\"\n  }, {\n    value: \"bruteforce\",\n    label: \"Brute Force Simulation\"\n  }];\n  const crackPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setCrackResult(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/hash/crack`, {\n        hash: hashValue,\n        algorithm,\n        method\n      });\n      setCrackResult(response.data.data);\n    } catch (err) {\n      setError(\"Error during password cracking simulation. Please try again.\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateHashForCracking = async () => {\n    if (!passwordToHash) return;\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/hash/generate`, {\n        text: passwordToHash,\n        algorithm\n      });\n      setGeneratedHash(response.data.data.hash);\n      setHashValue(response.data.data.hash);\n    } catch (err) {\n      console.error(\"Error generating hash:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-cracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Cracking Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Educational demonstration of password vulnerability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" This tool is for educational purposes only. It demonstrates basic concepts of password security.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hash-generator-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generate a Hash to Crack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a simple password...\",\n          value: passwordToHash,\n          onChange: e => setPasswordToHash(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateHashForCracking,\n          className: \"btn btn-small\",\n          children: \"Generate Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), generatedHash && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-hash\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [algorithm.toUpperCase(), \" Hash:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" \", generatedHash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigator.clipboard.writeText(generatedHash),\n          className: \"btn-link\",\n          children: \"Copy to clipboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: crackPassword,\n      className: \"crack-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Crack a Password Hash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hashValue\",\n          children: \"Enter hash to crack:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"hashValue\",\n          value: hashValue,\n          onChange: e => setHashValue(e.target.value),\n          required: true,\n          placeholder: \"Enter hash value...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"algorithm\",\n            children: \"Hash algorithm:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"algorithm\",\n            value: algorithm,\n            onChange: e => setAlgorithm(e.target.value),\n            children: algorithms.map(algo => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: algo,\n              children: algo.toUpperCase()\n            }, algo, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"method\",\n            children: \"Cracking method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"method\",\n            value: method,\n            onChange: e => setMethod(e.target.value),\n            children: methods.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m.value,\n              children: m.label\n            }, m.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"btn\",\n        children: loading ? \"Cracking...\" : \"Attempt to Crack Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), crackResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${crackResult.success ? \"success\" : \"failure\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: crackResult.success ? \"Password Cracked!\" : \"Cracking Unsuccessful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), crackResult.success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-found\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The password is: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: crackResult.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Attempts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), \" \", crackResult.attempts]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time taken:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), \" \", crackResult.timeTaken, \" ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), \" \", method === \"dictionary\" ? \"Dictionary Attack\" : \"Brute Force Simulation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How Password Cracking Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Dictionary Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This method tries common passwords and variations from a predefined list. It's effective against users who choose common or easily guessable passwords.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Brute Force Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This approach systematically tries all possible character combinations until the correct password is found. It's time-consuming but eventually will crack any password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-security\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Password Security Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Use long, complex passwords with mixed characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Never reuse passwords across different sites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Consider using a password manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enable two-factor authentication when available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordCracker, \"0Wl2In7zWLhXviXp07iAaRuVUQM=\");\n_c = PasswordCracker;\nexport default PasswordCracker;\nvar _c;\n$RefreshReg$(_c, \"PasswordCracker\");","map":{"version":3,"names":["React","useState","axios","API_BASE_URL","jsxDEV","_jsxDEV","PasswordCracker","_s","hashValue","setHashValue","algorithm","setAlgorithm","method","setMethod","crackResult","setCrackResult","loading","setLoading","error","setError","passwordToHash","setPasswordToHash","generatedHash","setGeneratedHash","algorithms","methods","value","label","crackPassword","e","preventDefault","response","post","hash","data","err","console","generateHashForCracking","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","target","onClick","toUpperCase","navigator","clipboard","writeText","onSubmit","htmlFor","id","required","map","algo","m","disabled","success","password","attempts","timeTaken","_c","$RefreshReg$"],"sources":["C:/Users/YASIN/Desktop/New folder (19)/frontend/src/components/PasswordCracker.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/PasswordCracker.css\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nconst PasswordCracker = () => {\r\n  const [hashValue, setHashValue] = useState(\"\");\r\n  const [algorithm, setAlgorithm] = useState(\"md5\");\r\n  const [method, setMethod] = useState(\"dictionary\");\r\n  const [crackResult, setCrackResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [passwordToHash, setPasswordToHash] = useState(\"\");\r\n  const [generatedHash, setGeneratedHash] = useState(\"\");\r\n\r\n  const algorithms = [\"md5\", \"sha1\", \"sha256\", \"sha512\"];\r\n  const methods = [\r\n    { value: \"dictionary\", label: \"Dictionary Attack\" },\r\n    { value: \"bruteforce\", label: \"Brute Force Simulation\" },\r\n  ];\r\n\r\n  const crackPassword = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setCrackResult(null);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/hash/crack`, {\r\n        hash: hashValue,\r\n        algorithm,\r\n        method,\r\n      });\r\n\r\n      setCrackResult(response.data.data);\r\n    } catch (err) {\r\n      setError(\"Error during password cracking simulation. Please try again.\");\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateHashForCracking = async () => {\r\n    if (!passwordToHash) return;\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/hash/generate`, {\r\n        text: passwordToHash,\r\n        algorithm,\r\n      });\r\n\r\n      setGeneratedHash(response.data.data.hash);\r\n      setHashValue(response.data.data.hash);\r\n    } catch (err) {\r\n      console.error(\"Error generating hash:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"password-cracker\">\r\n      <h2>Password Cracking Simulation</h2>\r\n      <p>Educational demonstration of password vulnerability</p>\r\n\r\n      <div className=\"disclaimer\">\r\n        <strong>Note:</strong> This tool is for educational purposes only. It\r\n        demonstrates basic concepts of password security.\r\n      </div>\r\n\r\n      <div className=\"hash-generator-section\">\r\n        <h3>Generate a Hash to Crack</h3>\r\n        <div className=\"form-inline\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter a simple password...\"\r\n            value={passwordToHash}\r\n            onChange={(e) => setPasswordToHash(e.target.value)}\r\n          />\r\n          <button onClick={generateHashForCracking} className=\"btn btn-small\">\r\n            Generate Hash\r\n          </button>\r\n        </div>\r\n        {generatedHash && (\r\n          <div className=\"generated-hash\">\r\n            <p>\r\n              <strong>{algorithm.toUpperCase()} Hash:</strong> {generatedHash}\r\n            </p>\r\n            <button\r\n              onClick={() => navigator.clipboard.writeText(generatedHash)}\r\n              className=\"btn-link\"\r\n            >\r\n              Copy to clipboard\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={crackPassword} className=\"crack-form\">\r\n        <h3>Crack a Password Hash</h3>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"hashValue\">Enter hash to crack:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"hashValue\"\r\n            value={hashValue}\r\n            onChange={(e) => setHashValue(e.target.value)}\r\n            required\r\n            placeholder=\"Enter hash value...\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"algorithm\">Hash algorithm:</label>\r\n            <select\r\n              id=\"algorithm\"\r\n              value={algorithm}\r\n              onChange={(e) => setAlgorithm(e.target.value)}\r\n            >\r\n              {algorithms.map((algo) => (\r\n                <option key={algo} value={algo}>\r\n                  {algo.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"method\">Cracking method:</label>\r\n            <select\r\n              id=\"method\"\r\n              value={method}\r\n              onChange={(e) => setMethod(e.target.value)}\r\n            >\r\n              {methods.map((m) => (\r\n                <option key={m.value} value={m.value}>\r\n                  {m.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" disabled={loading} className=\"btn\">\r\n          {loading ? \"Cracking...\" : \"Attempt to Crack Password\"}\r\n        </button>\r\n      </form>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {crackResult && (\r\n        <div\r\n          className={`result ${crackResult.success ? \"success\" : \"failure\"}`}\r\n        >\r\n          <h3>\r\n            {crackResult.success\r\n              ? \"Password Cracked!\"\r\n              : \"Cracking Unsuccessful\"}\r\n          </h3>\r\n\r\n          {crackResult.success && (\r\n            <div className=\"password-found\">\r\n              <p>\r\n                The password is: <strong>{crackResult.password}</strong>\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"result-details\">\r\n            <p>\r\n              <strong>Attempts:</strong> {crackResult.attempts}\r\n            </p>\r\n            <p>\r\n              <strong>Time taken:</strong> {crackResult.timeTaken} ms\r\n            </p>\r\n            <p>\r\n              <strong>Method:</strong>{\" \"}\r\n              {method === \"dictionary\"\r\n                ? \"Dictionary Attack\"\r\n                : \"Brute Force Simulation\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"info-box\">\r\n        <h3>How Password Cracking Works</h3>\r\n        <div className=\"info-content\">\r\n          <div className=\"info-column\">\r\n            <h4>Dictionary Attack</h4>\r\n            <p>\r\n              This method tries common passwords and variations from a\r\n              predefined list. It's effective against users who choose common or\r\n              easily guessable passwords.\r\n            </p>\r\n          </div>\r\n          <div className=\"info-column\">\r\n            <h4>Brute Force Attack</h4>\r\n            <p>\r\n              This approach systematically tries all possible character\r\n              combinations until the correct password is found. It's\r\n              time-consuming but eventually will crack any password.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"password-security\">\r\n          <h4>Password Security Tips</h4>\r\n          <ul>\r\n            <li>Use long, complex passwords with mixed characters</li>\r\n            <li>Never reuse passwords across different sites</li>\r\n            <li>Consider using a password manager</li>\r\n            <li>Enable two-factor authentication when available</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordCracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}