{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"../styles/HashCollisionDemo.css\";import{API_BASE_URL}from\"../config\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HashCollisionDemo=()=>{var _algorithms$find;const[input1,setInput1]=useState(\"\");const[input2,setInput2]=useState(\"\");const[algorithm,setAlgorithm]=useState(\"md5\");const[hash1,setHash1]=useState(\"\");const[hash2,setHash2]=useState(\"\");const[isCollision,setIsCollision]=useState(false);const[isBruteForcing,setIsBruteForcing]=useState(false);const[bruteForceProgress,setBruteForceProgress]=useState(0);const[foundCollisions,setFoundCollisions]=useState([]);const[knownCollisions,setKnownCollisions]=useState([]);const algorithms=[{value:\"md5\",label:\"MD5\",description:\"الگوریتمی سریع اما با امنیت پایین‌تر، دارای برخوردهای شناخته شده\"},{value:\"sha1\",label:\"SHA-1\",description:\"امنیت بهتر از MD5، اما همچنان دارای نقاط ضعف و برخوردهای نظری\"},{value:\"sha256\",label:\"SHA-256\",description:\"الگوریتمی امن با مقاومت بیشتر در برابر برخورد\"}];// نمایش برخوردهای شناخته شده برای هر الگوریتم\nuseEffect(()=>{// در دنیای واقعی، این داده‌ها باید از سرور دریافت شوند\nconst collisions={md5:[{input1:\"d131dd02c5e6eec4693d9a0698aff95c2fcab58712467eab4004583eb8fb7f8955ad340609f4b30283e488832571415a085125e8f7cdc99fd91dbdf280373c5b960b1dd1dc417b9ce4d897f45a6555d535739ac7f0ebfd0c3029f166d109b18f75277f79d33b1f45a66d61e1a46be3a\",input2:\"d131dd02c5e6eec4693d9a0698aff95c2fcab50712467eab4004583eb8fb7f8955ad340609f4b30283e4888325f1415a085125e8f7cdc99fd91dbd7280373c5b960b1dd1dc417b9ce4d897f45a6555d535739a47f0ebfd0c3029f166d109818f75277f79d33b1f45a66d61e1a46be3a\",hash:\"79054025255fb1a26e4bc422aef54eb4\",description:\"برخورد مشهور واست و آکاموتو (۲۰۰۴)\"},{input1:\"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2\",input2:\"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2\",hash:\"afd7a9c9c72cb123bea5d92d434c9262\",description:\"برخورد رمزنگاری با الگوریتم MD5\"}],sha1:[{input1:\"PDF-1\",input2:\"PDF-2\",hash:\"38762cf7f55934b34d179ae6a4c80cadccbb7f0a\",description:\"برخورد SHA-1 که توسط گوگل در سال ۲۰۱۷ کشف شد (نمونه‌ای ساده‌سازی شده)\"}],sha256:[]};setKnownCollisions(collisions[algorithm]||[]);},[algorithm]);// محاسبه هش برای ورودی‌ها\nuseEffect(()=>{const calculateHash=async()=>{if(!input1&&!input2)return;try{if(input1){const response1=await axios.post(`${API_BASE_URL}/api/hash/generate`,{text:input1,algorithm});setHash1(response1.data.data.hash);}if(input2){const response2=await axios.post(`${API_BASE_URL}/api/hash/generate`,{text:input2,algorithm});setHash2(response2.data.data.hash);}if(input1&&input2){// بررسی برخورد\nconst collision=hash1===hash2&&input1!==input2;setIsCollision(collision);if(collision){// افزودن به لیست برخوردها\nconst newCollision={input1,input2,hash:hash1};setFoundCollisions(prev=>{// بررسی تکراری نبودن\nif(!prev.some(c=>c.hash===hash1&&c.input1===input1&&c.input2===input2)){return[...prev,newCollision];}return prev;});}}}catch(error){console.error(\"خطا در محاسبه هش:\",error);}};calculateHash();},[input1,input2,algorithm]);// شبیه‌سازی جستجوی برخورد با روش نیروی بی‌رحمانه\nconst simulateBruteForce=()=>{setIsBruteForcing(true);setBruteForceProgress(0);// تعداد تلاش‌های شبیه‌سازی شده\nconst totalAttempts=100;let currentAttempt=0;// تایمر برای شبیه‌سازی جستجو\nconst simulationInterval=setInterval(()=>{currentAttempt++;setBruteForceProgress(Math.floor(currentAttempt/totalAttempts*100));// پایان شبیه‌سازی\nif(currentAttempt>=totalAttempts){clearInterval(simulationInterval);setIsBruteForcing(false);// نمایش یک برخورد شبیه‌سازی شده\nif(algorithm===\"md5\"||algorithm===\"sha1\"){const simulatedCollision={input1:`string1_${Math.random().toString(36).substring(7)}`,input2:`string2_${Math.random().toString(36).substring(7)}`,hash:algorithm===\"md5\"?`${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}`:`${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}${Math.random().toString(16).substring(2,10)}`,description:\"برخورد شبیه‌سازی شده\"};setFoundCollisions(prev=>[...prev,simulatedCollision]);}else{alert(\"برای الگوریتم‌های امن‌تر مانند SHA-256، یافتن برخورد بسیار دشوار است و نیاز به محاسبات بسیار زیادی دارد.\");}}},100);};// استفاده از یک برخورد شناخته شده\nconst useKnownCollision=collision=>{setInput1(collision.input1);setInput2(collision.input2);};return/*#__PURE__*/_jsxs(\"div\",{className:\"hash-collision-demo\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0647\\u0634\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0634\\u0628\\u06CC\\u0647\\u200C\\u0633\\u0627\\u0632\\u06CC \\u0648 \\u0646\\u0645\\u0627\\u06CC\\u0634 \\u067E\\u062F\\u06CC\\u062F\\u0647 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u062F\\u0631 \\u062A\\u0648\\u0627\\u0628\\u0639 \\u0647\\u0634\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"collision-definition\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0647\\u0634 \\u0686\\u06CC\\u0633\\u062A\\u061F\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0647\\u0634 (Hash Collision)\"}),\" \\u0632\\u0645\\u0627\\u0646\\u06CC \\u0631\\u062E \\u0645\\u06CC\\u200C\\u062F\\u0647\\u062F \\u06A9\\u0647 \\u062F\\u0648 \\u0648\\u0631\\u0648\\u062F\\u06CC \\u0645\\u062A\\u0641\\u0627\\u0648\\u062A \\u067E\\u0633 \\u0627\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u0627\\u0632 \\u062A\\u0627\\u0628\\u0639 \\u0647\\u0634\\u060C \\u0645\\u0642\\u062F\\u0627\\u0631 \\u06CC\\u06A9\\u0633\\u0627\\u0646\\u06CC \\u062A\\u0648\\u0644\\u06CC\\u062F \\u06A9\\u0646\\u0646\\u062F. \\u0627\\u06CC\\u0646 \\u067E\\u062F\\u06CC\\u062F\\u0647 \\u0628\\u0647 \\u062F\\u0644\\u06CC\\u0644 \\u0627\\u0635\\u0644 \\u06A9\\u0628\\u0648\\u062A\\u0631\\u06CC \\u0627\\u062C\\u062A\\u0646\\u0627\\u0628\\u200C\\u0646\\u0627\\u067E\\u0630\\u06CC\\u0631 \\u0627\\u0633\\u062A\\u060C \\u0632\\u06CC\\u0631\\u0627 \\u062A\\u0627\\u0628\\u0639 \\u0647\\u0634 \\u0641\\u0636\\u0627\\u06CC \\u0648\\u0631\\u0648\\u062F\\u06CC \\u0646\\u0627\\u0645\\u062D\\u062F\\u0648\\u062F \\u0631\\u0627 \\u0628\\u0647 \\u0641\\u0636\\u0627\\u06CC \\u062E\\u0631\\u0648\\u062C\\u06CC \\u0645\\u062D\\u062F\\u0648\\u062F \\u0646\\u06AF\\u0627\\u0634\\u062A \\u0645\\u06CC\\u200C\\u06A9\\u0646\\u062F.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collision-diagram\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input input-1\",children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input input-2\",children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"arrow arrow-1\",children:\"\\u2193\"}),/*#__PURE__*/_jsx(\"div\",{className:\"arrow arrow-2\",children:\"\\u2193\"}),/*#__PURE__*/_jsx(\"div\",{className:\"hash-function\",children:\"\\u062A\\u0627\\u0628\\u0639 \\u0647\\u0634\"}),/*#__PURE__*/_jsx(\"div\",{className:\"arrow arrow-3\",children:\"\\u2193\"}),/*#__PURE__*/_jsx(\"div\",{className:\"output\",children:\"\\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646!\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"experiment-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0622\\u0632\\u0645\\u0627\\u06CC\\u0634 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"algorithm-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"algorithm\",children:\"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u0627\\u0644\\u06AF\\u0648\\u0631\\u06CC\\u062A\\u0645 \\u0647\\u0634:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"algorithm\",value:algorithm,onChange:e=>setAlgorithm(e.target.value),children:algorithms.map(algo=>/*#__PURE__*/_jsx(\"option\",{value:algo.value,children:algo.label},algo.value))}),/*#__PURE__*/_jsx(\"p\",{className:\"algorithm-description\",children:(_algorithms$find=algorithms.find(a=>a.value===algorithm))===null||_algorithms$find===void 0?void 0:_algorithms$find.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collision-test\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"input1\",children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u0627\\u0648\\u0644:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"input1\",value:input1,onChange:e=>setInput1(e.target.value),placeholder:\"\\u0645\\u062A\\u0646 \\u0627\\u0648\\u0644 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F...\"}),hash1&&/*#__PURE__*/_jsxs(\"div\",{className:\"hash-result\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0647\\u0634:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:hash1})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"input2\",children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u062F\\u0648\\u0645:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"input2\",value:input2,onChange:e=>setInput2(e.target.value),placeholder:\"\\u0645\\u062A\\u0646 \\u062F\\u0648\\u0645 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0646\\u06CC\\u062F...\"}),hash2&&/*#__PURE__*/_jsxs(\"div\",{className:\"hash-result\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0647\\u0634:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:hash2})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"collision-result\",children:input1&&input2&&/*#__PURE__*/_jsx(\"div\",{className:`result ${isCollision?\"collision\":\"no-collision\"}`,children:isCollision?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"result-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0647\\u0634 \\u067E\\u06CC\\u062F\\u0627 \\u0634\\u062F! \\u062F\\u0648 \\u0648\\u0631\\u0648\\u062F\\u06CC \\u0645\\u062A\\u0641\\u0627\\u0648\\u062A \\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646\\u06CC \\u062A\\u0648\\u0644\\u06CC\\u062F \\u06A9\\u0631\\u062F\\u0646\\u062F.\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"result-icon\",children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0647\\u06CC\\u0686 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u06CC \\u067E\\u06CC\\u062F\\u0627 \\u0646\\u0634\\u062F. \\u0647\\u0634\\u200C\\u0647\\u0627\\u06CC \\u062A\\u0648\\u0644\\u06CC\\u062F\\u0634\\u062F\\u0647 \\u0645\\u062A\\u0641\\u0627\\u0648\\u062A \\u0647\\u0633\\u062A\\u0646\\u062F.\"})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"brute-force-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0634\\u0628\\u06CC\\u0647\\u200C\\u0633\\u0627\\u0632\\u06CC \\u062C\\u0633\\u062A\\u062C\\u0648\\u06CC \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u062C\\u0633\\u062A\\u062C\\u0648\\u06CC \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0628\\u0627 \\u0631\\u0648\\u0634 \\u0646\\u06CC\\u0631\\u0648\\u06CC \\u0628\\u06CC\\u200C\\u0631\\u062D\\u0645\\u0627\\u0646\\u0647 \\u0646\\u06CC\\u0627\\u0632 \\u0628\\u0647 \\u0645\\u062D\\u0627\\u0633\\u0628\\u0627\\u062A \\u0632\\u06CC\\u0627\\u062F\\u06CC \\u062F\\u0627\\u0631\\u062F. \\u0627\\u06CC\\u0646 \\u0634\\u0628\\u06CC\\u0647\\u200C\\u0633\\u0627\\u0632\\u06CC \\u0646\\u0634\\u0627\\u0646 \\u0645\\u06CC\\u200C\\u062F\\u0647\\u062F \\u06A9\\u0647 \\u0686\\u06AF\\u0648\\u0646\\u0647 \\u0645\\u06CC\\u200C\\u062A\\u0648\\u0627\\u0646 \\u0628\\u0647 \\u062F\\u0646\\u0628\\u0627\\u0644 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627 \\u06AF\\u0634\\u062A.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn brute-force-btn\",onClick:simulateBruteForce,disabled:isBruteForcing,children:isBruteForcing?\"در حال جستجو...\":\"شروع شبیه‌سازی جستجوی برخورد\"}),isBruteForcing&&/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${bruteForceProgress}%`}})}),/*#__PURE__*/_jsxs(\"p\",{children:[bruteForceProgress,\"% \\u062A\\u06A9\\u0645\\u06CC\\u0644 \\u0634\\u062F\\u0647\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collisions-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"known-collisions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627\\u06CC \\u0634\\u0646\\u0627\\u062E\\u062A\\u0647 \\u0634\\u062F\\u0647\"}),knownCollisions.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"collision-list\",children:knownCollisions.map((collision,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"collision-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"collision-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:`برخورد ${index+1}`}),/*#__PURE__*/_jsx(\"p\",{children:collision.description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:collision.hash})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn use-collision-btn\",onClick:()=>useKnownCollision(collision),children:\"\\u0627\\u0633\\u062A\\u0641\\u0627\\u062F\\u0647 \\u0627\\u0632 \\u0627\\u06CC\\u0646 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\"})]},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0628\\u0631\\u0627\\u06CC \\u0627\\u06CC\\u0646 \\u0627\\u0644\\u06AF\\u0648\\u0631\\u06CC\\u062A\\u0645 \\u0647\\u0634\\u060C \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0634\\u0646\\u0627\\u062E\\u062A\\u0647 \\u0634\\u062F\\u0647 \\u0648 \\u0639\\u0645\\u0644\\u06CC \\u062F\\u0631 \\u0633\\u06CC\\u0633\\u062A\\u0645 \\u062B\\u0628\\u062A \\u0646\\u0634\\u062F\\u0647 \\u0627\\u0633\\u062A.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"found-collisions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627\\u06CC \\u067E\\u06CC\\u062F\\u0627 \\u0634\\u062F\\u0647\"}),foundCollisions.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"collision-list\",children:foundCollisions.map((collision,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"collision-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:`برخورد ${index+1}`}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC 1:\"}),\" \",/*#__PURE__*/_jsxs(\"code\",{children:[collision.input1.substring(0,20),\"...\"]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0648\\u0631\\u0648\\u062F\\u06CC 2:\"}),\" \",/*#__PURE__*/_jsxs(\"code\",{children:[collision.input2.substring(0,20),\"...\"]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646:\"}),\" \",/*#__PURE__*/_jsx(\"code\",{children:collision.hash})]}),collision.description&&/*#__PURE__*/_jsx(\"p\",{children:collision.description})]},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"\\u0647\\u0646\\u0648\\u0632 \\u0647\\u06CC\\u0686 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u06CC \\u067E\\u06CC\\u062F\\u0627 \\u0646\\u0634\\u062F\\u0647 \\u0627\\u0633\\u062A. \\u0628\\u0627 \\u0622\\u0632\\u0645\\u0627\\u06CC\\u0634 \\u0648\\u0631\\u0648\\u062F\\u06CC\\u200C\\u0647\\u0627\\u06CC \\u0645\\u062E\\u062A\\u0644\\u0641 \\u06CC\\u0627 \\u0634\\u0628\\u06CC\\u0647\\u200C\\u0633\\u0627\\u0632\\u06CC \\u062C\\u0633\\u062A\\u062C\\u0648\\u060C \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627 \\u0631\\u0627 \\u067E\\u06CC\\u062F\\u0627 \\u06A9\\u0646\\u06CC\\u062F.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-box\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0627\\u0647\\u0645\\u06CC\\u062A \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627\\u06CC \\u0647\\u0634\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627\\u06CC \\u0647\\u0634 \\u0627\\u0632 \\u0646\\u0638\\u0631 \\u0627\\u0645\\u0646\\u06CC\\u062A\\u06CC \\u0628\\u0633\\u06CC\\u0627\\u0631 \\u0645\\u0647\\u0645 \\u0647\\u0633\\u062A\\u0646\\u062F. \\u0627\\u0644\\u06AF\\u0648\\u0631\\u06CC\\u062A\\u0645\\u200C\\u0647\\u0627\\u06CC \\u0647\\u0634 \\u0627\\u0645\\u0646 \\u0628\\u0627\\u06CC\\u062F \\u062F\\u0631 \\u0628\\u0631\\u0627\\u0628\\u0631 \\u0627\\u0646\\u0648\\u0627\\u0639 \\u062D\\u0645\\u0644\\u0627\\u062A \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0645\\u0642\\u0627\\u0648\\u0645 \\u0628\\u0627\\u0634\\u0646\\u062F:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u062D\\u0645\\u0644\\u0647 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F:\"}),\" \\u067E\\u06CC\\u062F\\u0627 \\u06A9\\u0631\\u062F\\u0646 \\u062F\\u0648 \\u0648\\u0631\\u0648\\u062F\\u06CC \\u062F\\u0644\\u062E\\u0648\\u0627\\u0647 \\u06A9\\u0647 \\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646\\u06CC \\u062A\\u0648\\u0644\\u06CC\\u062F \\u06A9\\u0646\\u0646\\u062F\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u062D\\u0645\\u0644\\u0647 \\u067E\\u06CC\\u0634\\u200C\\u062A\\u0635\\u0648\\u06CC\\u0631 \\u062F\\u0648\\u0645:\"}),\" \\u0628\\u0627 \\u062F\\u0627\\u0634\\u062A\\u0646 \\u06CC\\u06A9 \\u0648\\u0631\\u0648\\u062F\\u06CC\\u060C \\u067E\\u06CC\\u062F\\u0627 \\u06A9\\u0631\\u062F\\u0646 \\u0648\\u0631\\u0648\\u062F\\u06CC \\u062F\\u06CC\\u06AF\\u0631\\u06CC \\u06A9\\u0647 \\u0647\\u0634 \\u06CC\\u06A9\\u0633\\u0627\\u0646\\u06CC \\u062A\\u0648\\u0644\\u06CC\\u062F \\u06A9\\u0646\\u062F\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u062D\\u0645\\u0644\\u0647 \\u0631\\u0648\\u0632 \\u062A\\u0648\\u0644\\u062F:\"}),\" \\u0628\\u0631 \\u0627\\u0633\\u0627\\u0633 \\u0645\\u0633\\u0626\\u0644\\u0647 \\u0631\\u06CC\\u0627\\u0636\\u06CC \\u0631\\u0648\\u0632 \\u062A\\u0648\\u0644\\u062F\\u060C \\u06A9\\u0647 \\u0627\\u062D\\u062A\\u0645\\u0627\\u0644 \\u067E\\u06CC\\u062F\\u0627 \\u06A9\\u0631\\u062F\\u0646 \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F \\u0631\\u0627 \\u0628\\u06CC\\u0634\\u062A\\u0631 \\u0627\\u0632 \\u062D\\u062F \\u0627\\u0646\\u062A\\u0638\\u0627\\u0631 \\u0645\\u06CC\\u200C\\u06A9\\u0646\\u062F\"]})]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0627\\u06AF\\u0631 \\u0627\\u0644\\u06AF\\u0648\\u0631\\u06CC\\u062A\\u0645 \\u0647\\u0634\\u06CC \\u0645\\u0627\\u0646\\u0646\\u062F MD5 \\u062F\\u0627\\u0631\\u0627\\u06CC \\u0628\\u0631\\u062E\\u0648\\u0631\\u062F\\u0647\\u0627\\u06CC \\u0642\\u0627\\u0628\\u0644 \\u06CC\\u0627\\u0641\\u062A\\u0646 \\u0628\\u0627\\u0634\\u062F\\u060C \\u0627\\u0632 \\u0622\\u0646 \\u0646\\u0628\\u0627\\u06CC\\u062F \\u0628\\u0631\\u0627\\u06CC \\u06A9\\u0627\\u0631\\u0628\\u0631\\u062F\\u0647\\u0627\\u06CC \\u0627\\u0645\\u0646\\u06CC\\u062A\\u06CC \\u0627\\u0633\\u062A\\u0641\\u0627\\u062F\\u0647 \\u0634\\u0648\\u062F. \\u0627\\u0645\\u0631\\u0648\\u0632\\u0647 \\u0628\\u0631\\u0627\\u06CC \\u0627\\u0645\\u0646\\u06CC\\u062A \\u0628\\u06CC\\u0634\\u062A\\u0631\\u060C \\u0627\\u0632 \\u0627\\u0644\\u06AF\\u0648\\u0631\\u06CC\\u062A\\u0645\\u200C\\u0647\\u0627\\u06CC SHA-256 \\u06CC\\u0627 SHA-3 \\u0627\\u0633\\u062A\\u0641\\u0627\\u062F\\u0647 \\u0645\\u06CC\\u200C\\u0634\\u0648\\u062F.\"})]})]});};export default HashCollisionDemo;","map":{"version":3,"names":["React","useState","useEffect","axios","API_BASE_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HashCollisionDemo","_algorithms$find","input1","setInput1","input2","setInput2","algorithm","setAlgorithm","hash1","setHash1","hash2","setHash2","isCollision","setIsCollision","isBruteForcing","setIsBruteForcing","bruteForceProgress","setBruteForceProgress","foundCollisions","setFoundCollisions","knownCollisions","setKnownCollisions","algorithms","value","label","description","collisions","md5","hash","sha1","sha256","calculateHash","response1","post","text","data","response2","collision","newCollision","prev","some","c","error","console","simulateBruteForce","totalAttempts","currentAttempt","simulationInterval","setInterval","Math","floor","clearInterval","simulatedCollision","random","toString","substring","alert","useKnownCollision","className","children","htmlFor","id","onChange","e","target","map","algo","find","a","type","placeholder","onClick","disabled","style","width","length","index"],"sources":["C:/Users/YASIN/Desktop/New folder (19)/frontend/src/components/HashCollisionDemo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/HashCollisionDemo.css\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nconst HashCollisionDemo = () => {\r\n  const [input1, setInput1] = useState(\"\");\r\n  const [input2, setInput2] = useState(\"\");\r\n  const [algorithm, setAlgorithm] = useState(\"md5\");\r\n  const [hash1, setHash1] = useState(\"\");\r\n  const [hash2, setHash2] = useState(\"\");\r\n  const [isCollision, setIsCollision] = useState(false);\r\n  const [isBruteForcing, setIsBruteForcing] = useState(false);\r\n  const [bruteForceProgress, setBruteForceProgress] = useState(0);\r\n  const [foundCollisions, setFoundCollisions] = useState([]);\r\n  const [knownCollisions, setKnownCollisions] = useState([]);\r\n\r\n  const algorithms = [\r\n    {\r\n      value: \"md5\",\r\n      label: \"MD5\",\r\n      description:\r\n        \"الگوریتمی سریع اما با امنیت پایین‌تر، دارای برخوردهای شناخته شده\",\r\n    },\r\n    {\r\n      value: \"sha1\",\r\n      label: \"SHA-1\",\r\n      description:\r\n        \"امنیت بهتر از MD5، اما همچنان دارای نقاط ضعف و برخوردهای نظری\",\r\n    },\r\n    {\r\n      value: \"sha256\",\r\n      label: \"SHA-256\",\r\n      description: \"الگوریتمی امن با مقاومت بیشتر در برابر برخورد\",\r\n    },\r\n  ];\r\n\r\n  // نمایش برخوردهای شناخته شده برای هر الگوریتم\r\n  useEffect(() => {\r\n    // در دنیای واقعی، این داده‌ها باید از سرور دریافت شوند\r\n    const collisions = {\r\n      md5: [\r\n        {\r\n          input1:\r\n            \"d131dd02c5e6eec4693d9a0698aff95c2fcab58712467eab4004583eb8fb7f8955ad340609f4b30283e488832571415a085125e8f7cdc99fd91dbdf280373c5b960b1dd1dc417b9ce4d897f45a6555d535739ac7f0ebfd0c3029f166d109b18f75277f79d33b1f45a66d61e1a46be3a\",\r\n          input2:\r\n            \"d131dd02c5e6eec4693d9a0698aff95c2fcab50712467eab4004583eb8fb7f8955ad340609f4b30283e4888325f1415a085125e8f7cdc99fd91dbd7280373c5b960b1dd1dc417b9ce4d897f45a6555d535739a47f0ebfd0c3029f166d109818f75277f79d33b1f45a66d61e1a46be3a\",\r\n          hash: \"79054025255fb1a26e4bc422aef54eb4\",\r\n          description: \"برخورد مشهور واست و آکاموتو (۲۰۰۴)\",\r\n        },\r\n        {\r\n          input1:\r\n            \"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2\",\r\n          input2:\r\n            \"4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2\",\r\n          hash: \"afd7a9c9c72cb123bea5d92d434c9262\",\r\n          description: \"برخورد رمزنگاری با الگوریتم MD5\",\r\n        },\r\n      ],\r\n      sha1: [\r\n        {\r\n          input1: \"PDF-1\",\r\n          input2: \"PDF-2\",\r\n          hash: \"38762cf7f55934b34d179ae6a4c80cadccbb7f0a\",\r\n          description:\r\n            \"برخورد SHA-1 که توسط گوگل در سال ۲۰۱۷ کشف شد (نمونه‌ای ساده‌سازی شده)\",\r\n        },\r\n      ],\r\n      sha256: [],\r\n    };\r\n\r\n    setKnownCollisions(collisions[algorithm] || []);\r\n  }, [algorithm]);\r\n\r\n  // محاسبه هش برای ورودی‌ها\r\n  useEffect(() => {\r\n    const calculateHash = async () => {\r\n      if (!input1 && !input2) return;\r\n\r\n      try {\r\n        if (input1) {\r\n          const response1 = await axios.post(\r\n            `${API_BASE_URL}/api/hash/generate`,\r\n            {\r\n              text: input1,\r\n              algorithm,\r\n            }\r\n          );\r\n          setHash1(response1.data.data.hash);\r\n        }\r\n\r\n        if (input2) {\r\n          const response2 = await axios.post(\r\n            `${API_BASE_URL}/api/hash/generate`,\r\n            {\r\n              text: input2,\r\n              algorithm,\r\n            }\r\n          );\r\n          setHash2(response2.data.data.hash);\r\n        }\r\n\r\n        if (input1 && input2) {\r\n          // بررسی برخورد\r\n          const collision = hash1 === hash2 && input1 !== input2;\r\n          setIsCollision(collision);\r\n\r\n          if (collision) {\r\n            // افزودن به لیست برخوردها\r\n            const newCollision = { input1, input2, hash: hash1 };\r\n            setFoundCollisions((prev) => {\r\n              // بررسی تکراری نبودن\r\n              if (\r\n                !prev.some(\r\n                  (c) =>\r\n                    c.hash === hash1 &&\r\n                    c.input1 === input1 &&\r\n                    c.input2 === input2\r\n                )\r\n              ) {\r\n                return [...prev, newCollision];\r\n              }\r\n              return prev;\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"خطا در محاسبه هش:\", error);\r\n      }\r\n    };\r\n\r\n    calculateHash();\r\n  }, [input1, input2, algorithm]);\r\n\r\n  // شبیه‌سازی جستجوی برخورد با روش نیروی بی‌رحمانه\r\n  const simulateBruteForce = () => {\r\n    setIsBruteForcing(true);\r\n    setBruteForceProgress(0);\r\n\r\n    // تعداد تلاش‌های شبیه‌سازی شده\r\n    const totalAttempts = 100;\r\n    let currentAttempt = 0;\r\n\r\n    // تایمر برای شبیه‌سازی جستجو\r\n    const simulationInterval = setInterval(() => {\r\n      currentAttempt++;\r\n      setBruteForceProgress(Math.floor((currentAttempt / totalAttempts) * 100));\r\n\r\n      // پایان شبیه‌سازی\r\n      if (currentAttempt >= totalAttempts) {\r\n        clearInterval(simulationInterval);\r\n        setIsBruteForcing(false);\r\n\r\n        // نمایش یک برخورد شبیه‌سازی شده\r\n        if (algorithm === \"md5\" || algorithm === \"sha1\") {\r\n          const simulatedCollision = {\r\n            input1: `string1_${Math.random().toString(36).substring(7)}`,\r\n            input2: `string2_${Math.random().toString(36).substring(7)}`,\r\n            hash:\r\n              algorithm === \"md5\"\r\n                ? `${Math.random().toString(16).substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}`\r\n                : `${Math.random().toString(16).substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}${Math.random()\r\n                    .toString(16)\r\n                    .substring(2, 10)}`,\r\n            description: \"برخورد شبیه‌سازی شده\",\r\n          };\r\n\r\n          setFoundCollisions((prev) => [...prev, simulatedCollision]);\r\n        } else {\r\n          alert(\r\n            \"برای الگوریتم‌های امن‌تر مانند SHA-256، یافتن برخورد بسیار دشوار است و نیاز به محاسبات بسیار زیادی دارد.\"\r\n          );\r\n        }\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // استفاده از یک برخورد شناخته شده\r\n  const useKnownCollision = (collision) => {\r\n    setInput1(collision.input1);\r\n    setInput2(collision.input2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hash-collision-demo\">\r\n      <h2>نمایش برخورد هش</h2>\r\n      <p>شبیه‌سازی و نمایش پدیده برخورد در توابع هش</p>\r\n\r\n      <div className=\"collision-definition\">\r\n        <h3>برخورد هش چیست؟</h3>\r\n        <p>\r\n          <strong>برخورد هش (Hash Collision)</strong> زمانی رخ می‌دهد که دو\r\n          ورودی متفاوت پس از عبور از تابع هش، مقدار یکسانی تولید کنند. این پدیده\r\n          به دلیل اصل کبوتری اجتناب‌ناپذیر است، زیرا تابع هش فضای ورودی نامحدود\r\n          را به فضای خروجی محدود نگاشت می‌کند.\r\n        </p>\r\n        <div className=\"collision-diagram\">\r\n          <div className=\"input input-1\">ورودی A</div>\r\n          <div className=\"input input-2\">ورودی B</div>\r\n          <div className=\"arrow arrow-1\">↓</div>\r\n          <div className=\"arrow arrow-2\">↓</div>\r\n          <div className=\"hash-function\">تابع هش</div>\r\n          <div className=\"arrow arrow-3\">↓</div>\r\n          <div className=\"output\">هش یکسان!</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"experiment-section\">\r\n        <h3>آزمایش برخورد</h3>\r\n\r\n        <div className=\"algorithm-selector\">\r\n          <label htmlFor=\"algorithm\">انتخاب الگوریتم هش:</label>\r\n          <select\r\n            id=\"algorithm\"\r\n            value={algorithm}\r\n            onChange={(e) => setAlgorithm(e.target.value)}\r\n          >\r\n            {algorithms.map((algo) => (\r\n              <option key={algo.value} value={algo.value}>\r\n                {algo.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <p className=\"algorithm-description\">\r\n            {algorithms.find((a) => a.value === algorithm)?.description}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"collision-test\">\r\n          <div className=\"input-container\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"input1\">ورودی اول:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"input1\"\r\n                value={input1}\r\n                onChange={(e) => setInput1(e.target.value)}\r\n                placeholder=\"متن اول را وارد کنید...\"\r\n              />\r\n              {hash1 && (\r\n                <div className=\"hash-result\">\r\n                  <strong>هش:</strong> <code>{hash1}</code>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"input2\">ورودی دوم:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"input2\"\r\n                value={input2}\r\n                onChange={(e) => setInput2(e.target.value)}\r\n                placeholder=\"متن دوم را وارد کنید...\"\r\n              />\r\n              {hash2 && (\r\n                <div className=\"hash-result\">\r\n                  <strong>هش:</strong> <code>{hash2}</code>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"collision-result\">\r\n            {input1 && input2 && (\r\n              <div\r\n                className={`result ${\r\n                  isCollision ? \"collision\" : \"no-collision\"\r\n                }`}\r\n              >\r\n                {isCollision ? (\r\n                  <>\r\n                    <span className=\"result-icon\">⚠️</span>\r\n                    <p>\r\n                      برخورد هش پیدا شد! دو ورودی متفاوت هش یکسانی تولید کردند.\r\n                    </p>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"result-icon\">✅</span>\r\n                    <p>هیچ برخوردی پیدا نشد. هش‌های تولیدشده متفاوت هستند.</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"brute-force-section\">\r\n          <h3>شبیه‌سازی جستجوی برخورد</h3>\r\n          <p>\r\n            جستجوی برخورد با روش نیروی بی‌رحمانه نیاز به محاسبات زیادی دارد. این\r\n            شبیه‌سازی نشان می‌دهد که چگونه می‌توان به دنبال برخوردها گشت.\r\n          </p>\r\n\r\n          <button\r\n            className=\"btn brute-force-btn\"\r\n            onClick={simulateBruteForce}\r\n            disabled={isBruteForcing}\r\n          >\r\n            {isBruteForcing\r\n              ? \"در حال جستجو...\"\r\n              : \"شروع شبیه‌سازی جستجوی برخورد\"}\r\n          </button>\r\n\r\n          {isBruteForcing && (\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div\r\n                  className=\"progress-fill\"\r\n                  style={{ width: `${bruteForceProgress}%` }}\r\n                ></div>\r\n              </div>\r\n              <p>{bruteForceProgress}% تکمیل شده</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"collisions-section\">\r\n        <div className=\"known-collisions\">\r\n          <h3>برخوردهای شناخته شده</h3>\r\n          {knownCollisions.length > 0 ? (\r\n            <div className=\"collision-list\">\r\n              {knownCollisions.map((collision, index) => (\r\n                <div className=\"collision-item\" key={index}>\r\n                  <div className=\"collision-info\">\r\n                    <h4>{`برخورد ${index + 1}`}</h4>\r\n                    <p>{collision.description}</p>\r\n                    <p>\r\n                      <strong>هش یکسان:</strong> <code>{collision.hash}</code>\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn use-collision-btn\"\r\n                    onClick={() => useKnownCollision(collision)}\r\n                  >\r\n                    استفاده از این برخورد\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>\r\n              برای این الگوریتم هش، برخورد شناخته شده و عملی در سیستم ثبت نشده\r\n              است.\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"found-collisions\">\r\n          <h3>برخوردهای پیدا شده</h3>\r\n          {foundCollisions.length > 0 ? (\r\n            <div className=\"collision-list\">\r\n              {foundCollisions.map((collision, index) => (\r\n                <div className=\"collision-item\" key={index}>\r\n                  <h4>{`برخورد ${index + 1}`}</h4>\r\n                  <p>\r\n                    <strong>ورودی 1:</strong>{\" \"}\r\n                    <code>{collision.input1.substring(0, 20)}...</code>\r\n                  </p>\r\n                  <p>\r\n                    <strong>ورودی 2:</strong>{\" \"}\r\n                    <code>{collision.input2.substring(0, 20)}...</code>\r\n                  </p>\r\n                  <p>\r\n                    <strong>هش یکسان:</strong> <code>{collision.hash}</code>\r\n                  </p>\r\n                  {collision.description && <p>{collision.description}</p>}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>\r\n              هنوز هیچ برخوردی پیدا نشده است. با آزمایش ورودی‌های مختلف یا\r\n              شبیه‌سازی جستجو، برخوردها را پیدا کنید.\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info-box\">\r\n        <h3>اهمیت برخوردهای هش</h3>\r\n        <p>\r\n          برخوردهای هش از نظر امنیتی بسیار مهم هستند. الگوریتم‌های هش امن باید\r\n          در برابر انواع حملات برخورد مقاوم باشند:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>حمله برخورد:</strong> پیدا کردن دو ورودی دلخواه که هش یکسانی\r\n            تولید کنند\r\n          </li>\r\n          <li>\r\n            <strong>حمله پیش‌تصویر دوم:</strong> با داشتن یک ورودی، پیدا کردن\r\n            ورودی دیگری که هش یکسانی تولید کند\r\n          </li>\r\n          <li>\r\n            <strong>حمله روز تولد:</strong> بر اساس مسئله ریاضی روز تولد، که\r\n            احتمال پیدا کردن برخورد را بیشتر از حد انتظار می‌کند\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          اگر الگوریتم هشی مانند MD5 دارای برخوردهای قابل یافتن باشد، از آن\r\n          نباید برای کاربردهای امنیتی استفاده شود. امروزه برای امنیت بیشتر، از\r\n          الگوریتم‌های SHA-256 یا SHA-3 استفاده می‌شود.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HashCollisionDemo;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,iCAAiC,CACxC,OAASC,YAAY,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEzC,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,KAAAC,gBAAA,CAC9B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACc,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACwB,cAAc,CAAEC,iBAAiB,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAC0B,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAC/D,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAC8B,eAAe,CAAEC,kBAAkB,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAE1D,KAAM,CAAAgC,UAAU,CAAG,CACjB,CACEC,KAAK,CAAE,KAAK,CACZC,KAAK,CAAE,KAAK,CACZC,WAAW,CACT,kEACJ,CAAC,CACD,CACEF,KAAK,CAAE,MAAM,CACbC,KAAK,CAAE,OAAO,CACdC,WAAW,CACT,+DACJ,CAAC,CACD,CACEF,KAAK,CAAE,QAAQ,CACfC,KAAK,CAAE,SAAS,CAChBC,WAAW,CAAE,+CACf,CAAC,CACF,CAED;AACAlC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAmC,UAAU,CAAG,CACjBC,GAAG,CAAE,CACH,CACEzB,MAAM,CACJ,iOAAiO,CACnOE,MAAM,CACJ,iOAAiO,CACnOwB,IAAI,CAAE,kCAAkC,CACxCH,WAAW,CAAE,oCACf,CAAC,CACD,CACEvB,MAAM,CACJ,kIAAkI,CACpIE,MAAM,CACJ,kIAAkI,CACpIwB,IAAI,CAAE,kCAAkC,CACxCH,WAAW,CAAE,iCACf,CAAC,CACF,CACDI,IAAI,CAAE,CACJ,CACE3B,MAAM,CAAE,OAAO,CACfE,MAAM,CAAE,OAAO,CACfwB,IAAI,CAAE,0CAA0C,CAChDH,WAAW,CACT,uEACJ,CAAC,CACF,CACDK,MAAM,CAAE,EACV,CAAC,CAEDT,kBAAkB,CAACK,UAAU,CAACpB,SAAS,CAAC,EAAI,EAAE,CAAC,CACjD,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACAf,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAAC7B,MAAM,EAAI,CAACE,MAAM,CAAE,OAExB,GAAI,CACF,GAAIF,MAAM,CAAE,CACV,KAAM,CAAA8B,SAAS,CAAG,KAAM,CAAAxC,KAAK,CAACyC,IAAI,CAChC,GAAGxC,YAAY,oBAAoB,CACnC,CACEyC,IAAI,CAAEhC,MAAM,CACZI,SACF,CACF,CAAC,CACDG,QAAQ,CAACuB,SAAS,CAACG,IAAI,CAACA,IAAI,CAACP,IAAI,CAAC,CACpC,CAEA,GAAIxB,MAAM,CAAE,CACV,KAAM,CAAAgC,SAAS,CAAG,KAAM,CAAA5C,KAAK,CAACyC,IAAI,CAChC,GAAGxC,YAAY,oBAAoB,CACnC,CACEyC,IAAI,CAAE9B,MAAM,CACZE,SACF,CACF,CAAC,CACDK,QAAQ,CAACyB,SAAS,CAACD,IAAI,CAACA,IAAI,CAACP,IAAI,CAAC,CACpC,CAEA,GAAI1B,MAAM,EAAIE,MAAM,CAAE,CACpB;AACA,KAAM,CAAAiC,SAAS,CAAG7B,KAAK,GAAKE,KAAK,EAAIR,MAAM,GAAKE,MAAM,CACtDS,cAAc,CAACwB,SAAS,CAAC,CAEzB,GAAIA,SAAS,CAAE,CACb;AACA,KAAM,CAAAC,YAAY,CAAG,CAAEpC,MAAM,CAAEE,MAAM,CAAEwB,IAAI,CAAEpB,KAAM,CAAC,CACpDW,kBAAkB,CAAEoB,IAAI,EAAK,CAC3B;AACA,GACE,CAACA,IAAI,CAACC,IAAI,CACPC,CAAC,EACAA,CAAC,CAACb,IAAI,GAAKpB,KAAK,EAChBiC,CAAC,CAACvC,MAAM,GAAKA,MAAM,EACnBuC,CAAC,CAACrC,MAAM,GAAKA,MACjB,CAAC,CACD,CACA,MAAO,CAAC,GAAGmC,IAAI,CAAED,YAAY,CAAC,CAChC,CACA,MAAO,CAAAC,IAAI,CACb,CAAC,CAAC,CACJ,CACF,CACF,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CAC3C,CACF,CAAC,CAEDX,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,CAAC7B,MAAM,CAAEE,MAAM,CAAEE,SAAS,CAAC,CAAC,CAE/B;AACA,KAAM,CAAAsC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B7B,iBAAiB,CAAC,IAAI,CAAC,CACvBE,qBAAqB,CAAC,CAAC,CAAC,CAExB;AACA,KAAM,CAAA4B,aAAa,CAAG,GAAG,CACzB,GAAI,CAAAC,cAAc,CAAG,CAAC,CAEtB;AACA,KAAM,CAAAC,kBAAkB,CAAGC,WAAW,CAAC,IAAM,CAC3CF,cAAc,EAAE,CAChB7B,qBAAqB,CAACgC,IAAI,CAACC,KAAK,CAAEJ,cAAc,CAAGD,aAAa,CAAI,GAAG,CAAC,CAAC,CAEzE;AACA,GAAIC,cAAc,EAAID,aAAa,CAAE,CACnCM,aAAa,CAACJ,kBAAkB,CAAC,CACjChC,iBAAiB,CAAC,KAAK,CAAC,CAExB;AACA,GAAIT,SAAS,GAAK,KAAK,EAAIA,SAAS,GAAK,MAAM,CAAE,CAC/C,KAAM,CAAA8C,kBAAkB,CAAG,CACzBlD,MAAM,CAAE,WAAW+C,IAAI,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,CAC5DnD,MAAM,CAAE,WAAW6C,IAAI,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,CAC5D3B,IAAI,CACFtB,SAAS,GAAK,KAAK,CACf,GAAG2C,IAAI,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAC3DC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAChCC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAChCC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,EAAE,CACrB,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAC3DC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAChCC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAChCC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,GAAGN,IAAI,CAACI,MAAM,CAAC,CAAC,CAChCC,QAAQ,CAAC,EAAE,CAAC,CACZC,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,EAAE,CAC3B9B,WAAW,CAAE,sBACf,CAAC,CAEDN,kBAAkB,CAAEoB,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEa,kBAAkB,CAAC,CAAC,CAC7D,CAAC,IAAM,CACLI,KAAK,CACH,0GACF,CAAC,CACH,CACF,CACF,CAAC,CAAE,GAAG,CAAC,CACT,CAAC,CAED;AACA,KAAM,CAAAC,iBAAiB,CAAIpB,SAAS,EAAK,CACvClC,SAAS,CAACkC,SAAS,CAACnC,MAAM,CAAC,CAC3BG,SAAS,CAACgC,SAAS,CAACjC,MAAM,CAAC,CAC7B,CAAC,CAED,mBACEP,KAAA,QAAK6D,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClChE,IAAA,OAAAgE,QAAA,CAAI,kFAAe,CAAI,CAAC,cACxBhE,IAAA,MAAAgE,QAAA,CAAG,2NAA0C,CAAG,CAAC,cAEjD9D,KAAA,QAAK6D,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnChE,IAAA,OAAAgE,QAAA,CAAI,kFAAe,CAAI,CAAC,cACxB9D,KAAA,MAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,oEAA0B,CAAQ,CAAC,2+BAI7C,EAAG,CAAC,cACJ9D,KAAA,QAAK6D,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,kCAAO,CAAK,CAAC,cAC5ChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,kCAAO,CAAK,CAAC,cAC5ChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAC,CAAK,CAAC,cACtChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAC,CAAK,CAAC,cACtChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,uCAAO,CAAK,CAAC,cAC5ChE,IAAA,QAAK+D,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAC,CAAK,CAAC,cACtChE,IAAA,QAAK+D,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,8CAAS,CAAK,CAAC,EACpC,CAAC,EACH,CAAC,cAEN9D,KAAA,QAAK6D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjChE,IAAA,OAAAgE,QAAA,CAAI,2EAAa,CAAI,CAAC,cAEtB9D,KAAA,QAAK6D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjChE,IAAA,UAAOiE,OAAO,CAAC,WAAW,CAAAD,QAAA,CAAC,qGAAmB,CAAO,CAAC,cACtDhE,IAAA,WACEkE,EAAE,CAAC,WAAW,CACdtC,KAAK,CAAEjB,SAAU,CACjBwD,QAAQ,CAAGC,CAAC,EAAKxD,YAAY,CAACwD,CAAC,CAACC,MAAM,CAACzC,KAAK,CAAE,CAAAoC,QAAA,CAE7CrC,UAAU,CAAC2C,GAAG,CAAEC,IAAI,eACnBvE,IAAA,WAAyB4B,KAAK,CAAE2C,IAAI,CAAC3C,KAAM,CAAAoC,QAAA,CACxCO,IAAI,CAAC1C,KAAK,EADA0C,IAAI,CAAC3C,KAEV,CACT,CAAC,CACI,CAAC,cACT5B,IAAA,MAAG+D,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAA1D,gBAAA,CACjCqB,UAAU,CAAC6C,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAAC7C,KAAK,GAAKjB,SAAS,CAAC,UAAAL,gBAAA,iBAA7CA,gBAAA,CAA+CwB,WAAW,CAC1D,CAAC,EACD,CAAC,cAEN5B,KAAA,QAAK6D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9D,KAAA,QAAK6D,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B9D,KAAA,QAAK6D,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhE,IAAA,UAAOiE,OAAO,CAAC,QAAQ,CAAAD,QAAA,CAAC,oDAAU,CAAO,CAAC,cAC1ChE,IAAA,UACE0E,IAAI,CAAC,MAAM,CACXR,EAAE,CAAC,QAAQ,CACXtC,KAAK,CAAErB,MAAO,CACd4D,QAAQ,CAAGC,CAAC,EAAK5D,SAAS,CAAC4D,CAAC,CAACC,MAAM,CAACzC,KAAK,CAAE,CAC3C+C,WAAW,CAAC,yGAAyB,CACtC,CAAC,CACD9D,KAAK,eACJX,KAAA,QAAK6D,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhE,IAAA,WAAAgE,QAAA,CAAQ,eAAG,CAAQ,CAAC,IAAC,cAAAhE,IAAA,SAAAgE,QAAA,CAAOnD,KAAK,CAAO,CAAC,EACtC,CACN,EACE,CAAC,cAENX,KAAA,QAAK6D,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhE,IAAA,UAAOiE,OAAO,CAAC,QAAQ,CAAAD,QAAA,CAAC,oDAAU,CAAO,CAAC,cAC1ChE,IAAA,UACE0E,IAAI,CAAC,MAAM,CACXR,EAAE,CAAC,QAAQ,CACXtC,KAAK,CAAEnB,MAAO,CACd0D,QAAQ,CAAGC,CAAC,EAAK1D,SAAS,CAAC0D,CAAC,CAACC,MAAM,CAACzC,KAAK,CAAE,CAC3C+C,WAAW,CAAC,yGAAyB,CACtC,CAAC,CACD5D,KAAK,eACJb,KAAA,QAAK6D,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhE,IAAA,WAAAgE,QAAA,CAAQ,eAAG,CAAQ,CAAC,IAAC,cAAAhE,IAAA,SAAAgE,QAAA,CAAOjD,KAAK,CAAO,CAAC,EACtC,CACN,EACE,CAAC,EACH,CAAC,cAENf,IAAA,QAAK+D,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9BzD,MAAM,EAAIE,MAAM,eACfT,IAAA,QACE+D,SAAS,CAAE,UACT9C,WAAW,CAAG,WAAW,CAAG,cAAc,EACzC,CAAA+C,QAAA,CAEF/C,WAAW,cACVf,KAAA,CAAAE,SAAA,EAAA4D,QAAA,eACEhE,IAAA,SAAM+D,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACvChE,IAAA,MAAAgE,QAAA,CAAG,4RAEH,CAAG,CAAC,EACJ,CAAC,cAEH9D,KAAA,CAAAE,SAAA,EAAA4D,QAAA,eACEhE,IAAA,SAAM+D,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,cACtChE,IAAA,MAAAgE,QAAA,CAAG,uQAAmD,CAAG,CAAC,EAC1D,CACH,CACE,CACN,CACE,CAAC,EACH,CAAC,cAEN9D,KAAA,QAAK6D,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClChE,IAAA,OAAAgE,QAAA,CAAI,kIAAuB,CAAI,CAAC,cAChChE,IAAA,MAAAgE,QAAA,CAAG,2pBAGH,CAAG,CAAC,cAEJhE,IAAA,WACE+D,SAAS,CAAC,qBAAqB,CAC/Ba,OAAO,CAAE3B,kBAAmB,CAC5B4B,QAAQ,CAAE1D,cAAe,CAAA6C,QAAA,CAExB7C,cAAc,CACX,iBAAiB,CACjB,8BAA8B,CAC5B,CAAC,CAERA,cAAc,eACbjB,KAAA,QAAK6D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjChE,IAAA,QAAK+D,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BhE,IAAA,QACE+D,SAAS,CAAC,eAAe,CACzBe,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAG1D,kBAAkB,GAAI,CAAE,CACvC,CAAC,CACJ,CAAC,cACNnB,KAAA,MAAA8D,QAAA,EAAI3C,kBAAkB,CAAC,qDAAW,EAAG,CAAC,EACnC,CACN,EACE,CAAC,EACH,CAAC,cAENnB,KAAA,QAAK6D,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC9D,KAAA,QAAK6D,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhE,IAAA,OAAAgE,QAAA,CAAI,gHAAoB,CAAI,CAAC,CAC5BvC,eAAe,CAACuD,MAAM,CAAG,CAAC,cACzBhF,IAAA,QAAK+D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BvC,eAAe,CAAC6C,GAAG,CAAC,CAAC5B,SAAS,CAAEuC,KAAK,gBACpC/E,KAAA,QAAK6D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B9D,KAAA,QAAK6D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhE,IAAA,OAAAgE,QAAA,CAAK,UAAUiB,KAAK,CAAG,CAAC,EAAE,CAAK,CAAC,cAChCjF,IAAA,MAAAgE,QAAA,CAAItB,SAAS,CAACZ,WAAW,CAAI,CAAC,cAC9B5B,KAAA,MAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,8CAAS,CAAQ,CAAC,IAAC,cAAAhE,IAAA,SAAAgE,QAAA,CAAOtB,SAAS,CAACT,IAAI,CAAO,CAAC,EACvD,CAAC,EACD,CAAC,cACNjC,IAAA,WACE+D,SAAS,CAAC,uBAAuB,CACjCa,OAAO,CAAEA,CAAA,GAAMd,iBAAiB,CAACpB,SAAS,CAAE,CAAAsB,QAAA,CAC7C,iHAED,CAAQ,CAAC,GAb0BiB,KAchC,CACN,CAAC,CACC,CAAC,cAENjF,IAAA,MAAAgE,QAAA,CAAG,0VAGH,CAAG,CACJ,EACE,CAAC,cAEN9D,KAAA,QAAK6D,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BhE,IAAA,OAAAgE,QAAA,CAAI,oGAAkB,CAAI,CAAC,CAC1BzC,eAAe,CAACyD,MAAM,CAAG,CAAC,cACzBhF,IAAA,QAAK+D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BzC,eAAe,CAAC+C,GAAG,CAAC,CAAC5B,SAAS,CAAEuC,KAAK,gBACpC/E,KAAA,QAAK6D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BhE,IAAA,OAAAgE,QAAA,CAAK,UAAUiB,KAAK,CAAG,CAAC,EAAE,CAAK,CAAC,cAChC/E,KAAA,MAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,mCAAQ,CAAQ,CAAC,CAAC,GAAG,cAC7B9D,KAAA,SAAA8D,QAAA,EAAOtB,SAAS,CAACnC,MAAM,CAACqD,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,KAAG,EAAM,CAAC,EAClD,CAAC,cACJ1D,KAAA,MAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,mCAAQ,CAAQ,CAAC,CAAC,GAAG,cAC7B9D,KAAA,SAAA8D,QAAA,EAAOtB,SAAS,CAACjC,MAAM,CAACmD,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,KAAG,EAAM,CAAC,EAClD,CAAC,cACJ1D,KAAA,MAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,8CAAS,CAAQ,CAAC,IAAC,cAAAhE,IAAA,SAAAgE,QAAA,CAAOtB,SAAS,CAACT,IAAI,CAAO,CAAC,EACvD,CAAC,CACHS,SAAS,CAACZ,WAAW,eAAI9B,IAAA,MAAAgE,QAAA,CAAItB,SAAS,CAACZ,WAAW,CAAI,CAAC,GAbrBmD,KAchC,CACN,CAAC,CACC,CAAC,cAENjF,IAAA,MAAAgE,QAAA,CAAG,ggBAGH,CAAG,CACJ,EACE,CAAC,EACH,CAAC,cAEN9D,KAAA,QAAK6D,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBhE,IAAA,OAAAgE,QAAA,CAAI,oGAAkB,CAAI,CAAC,cAC3BhE,IAAA,MAAAgE,QAAA,CAAG,4iBAGH,CAAG,CAAC,cACJ9D,KAAA,OAAA8D,QAAA,eACE9D,KAAA,OAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,gEAAY,CAAQ,CAAC,6PAE/B,EAAI,CAAC,cACL9D,KAAA,OAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,qGAAmB,CAAQ,CAAC,kUAEtC,EAAI,CAAC,cACL9D,KAAA,OAAA8D,QAAA,eACEhE,IAAA,WAAAgE,QAAA,CAAQ,uEAAc,CAAQ,CAAC,kbAEjC,EAAI,CAAC,EACH,CAAC,cACLhE,IAAA,MAAAgE,QAAA,CAAG,y1BAIH,CAAG,CAAC,EACD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3D,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}